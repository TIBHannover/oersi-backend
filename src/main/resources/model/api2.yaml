swagger: "2.0"
info:
  description: "This is the Swagger Documentation of the OER Search Index REST API."
  version: "1.0.0"
  title: "OER Search Index REST API"
  termsOfService: " "
  contact:
    email: "edmond.kacaj@tib.eu"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"
basePath: "/api"
tags:
  - name: "label-controller"
    description: "Endpoints for access to labels"
  - name: "label-definition-controller"
    description: "Endpoints for access to label definitions"
  - name: "search-Controller"
    description: "Every EndPoint for Search Controller "
  - name: "metadata-controller"
    description: "Every EndPoint for Metadata Controller"

paths:
  /label/{language}:
    get:
      tags:
        - "label-controller"
      summary: "Retrieve labels"
      description: "Retrieve labels for shared vocabularies. These labels will be retrieved from the existing data."
      operationId: "retrieve"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: language
          description: "Language of the labels"
          required: true
          type: string
        - in: query
          name: vocab
          description: "Vocabulary"
          required: false
          type: string
          enum:
            - audience
            - lrt
            - subject
      responses:
        '200':
          description: OK
          schema:
            type: "object"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /labeldefinition:
    $ref: "labeldefinition.yaml#/~1labeldefinition"
  /labeldefinition/bulk:
    $ref: "labeldefinition.yaml#/~1labeldefinition~1bulk"
  /labeldefinition/{id}:
    $ref: "labeldefinition.yaml#/~1labeldefinition~1{id}"

  /metadata:
    post:
      tags:
        - "metadata-controller"
      summary: "Create or Update "
      description: "With this end-point we can create or update  Metadata "
      operationId: "createOrUpdate"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Metadata Object needs to be added   "
          required: true
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
      responses:
        '200':
          description: OK
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - "metadata-controller"
      summary: "Delete all metadata"
      description: "Delete all existing metadata"
      operationId: "deleteAll"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /metadata/{id}:
    put:
      tags:
        - "metadata-controller"
      summary: "Update an existing Metadata"
      description: "With this end-point we can  update an existing  Metadata "
      operationId: "update"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "Id to update Metadata"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Metadata Object needs to be added "
          required: true
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
      responses:
        '200':
          description: OK
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - "metadata-controller"
      summary: "Delete metadata by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "delete"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "ID of the metadata that needs to be deleted"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: OK
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    get:
      tags:
        - "metadata-controller"
      summary: "Find Metadata by Id"
      description: "With this end-point we can  get by Id  an existing  Metadata"
      operationId: "findById"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: "int64"
      responses:
        '200':
          description: OK
          schema:
            $ref: "definitions.yaml#/definitions/Metadata"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /search/**:
    post:
      tags:
        - "search-controller"
      summary: "Find Metadata by Id"
      description: |
        **Request Body Search**
        <br/><br/>
        **Specifies search criteria as request body parameters.**
        <br/><br/>
        <em>The search request can be executed with a search DSL, which includes the [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html), within its body.g.</em>
        <br/><br/>
        **Example**
        <br/><br/>
          **Request**
         ```
           GET /<index>/_search
            {
              "query": {<parameters>}
            }
         ```
        <br/><br/>
        Form more info about Request Body Search you can find here [Request Body Search](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#search-request-body).

      operationId: "processElasticsearchPostRequest"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          description: |
            **Elastic Search**
            <br/>
            **Schema Example**
            <br/>
             Example Show all
             <br/><br/>
              ```
               {
                 "query": {
                   "match_all": {}
                 }
              }
              ```

          required: false
          schema:
            type: string
            example: '{"query": {"match_all": {}}}'

      responses:
        '200':
          description: |
            **Elastic Search Json Object**
            <br/>
            **This is a dynamic JSON come from elastic search**
            <br/>
            **Don't have a default Schema. Is a String**
          schema:
            type: string
            example: "Dynamic JSON String come from ElasticSearch "
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /search/**/?{params}:
    get:
      tags:
        - "search-controller"
      summary: "Find Metadata by params "
      description:  |
        **URI Search**
        <br/><br/>
        **Specifies search criteria as query parameters in the request URI.**
        <br/><br/>
        <em>You can use query parameters to define your search criteria directly in the request URI, rather than in the request body. Request URI searches do not support the full Elasticsearch Query DSL, but are handy for testing.</em>
        <br/><br/>
         **Example:**
         <br/><br/>
          **Request:**
         ```
         GET /<index>/_search?q=<parameter>
         ```
        <br/><br/>
        Form more info about URI Search you can find here [URI Search](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html).

      operationId: "processElasticsearchGetRequest"
      produces:
        - "application/json"
      parameters:
        - name: "params"
          in: "path"
          description: "e.g size=1000&pretty=true"
          required: true
          type: "string"
          default: "size=1000&pretty=true"
          collectionFormat: "csv"
      responses:
        '200':
          description: |
            **Elastic Search Json Object**
            <br/>
            **This is a dynamic JSON come from elastic search**
            <br/>
             **Don't have a default Schema. Is a String**
          schema:
            type: string
            example: "Dynamic JSON String come from ElasticSearch "
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"