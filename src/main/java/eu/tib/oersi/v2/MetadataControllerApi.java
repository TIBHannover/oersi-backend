/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package eu.tib.oersi.v2;

import eu.tib.oersi.dto.MetadataDto;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-03-05T12:39:28.323+01:00")

@Api(value = "MetadataController", description = "the MetadataController API")
@RequestMapping(value = "/api")
public interface MetadataControllerApi {

    Logger log = LoggerFactory.getLogger(MetadataControllerApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Create or Update ", nickname = "createOrUpdate", notes = "With this end-point we can create or update  Metadata ", response = MetadataDto.class, tags={ "metadata-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MetadataDto.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/metadata",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<MetadataDto> _createOrUpdate(@ApiParam(value = "Metadata Object needs to be added   " ,required=true )  @Valid @RequestBody MetadataDto body) {
        return createOrUpdate(body);
    }

    // Override this method
    default ResponseEntity<MetadataDto> createOrUpdate(MetadataDto body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"institution\" : {    \"ror\" : \"ror\",    \"name\" : \"name\",    \"id\" : 5  },  \"didactics\" : {    \"educationalUse\" : \"educationalUse\",    \"timeRequired\" : \"timeRequired\",    \"interactivityType\" : \"interactivityType\",    \"audience\" : \"audience\",    \"id\" : 1  },  \"educationalResource\" : {    \"identifier\" : \"identifier\",    \"keywords\" : [ \"Math\", \"Sience\", \"Lesson\" ],    \"dateLastUpdated\" : \"2017-07-21T17:32:28Z\",    \"subject\" : \"subject\",    \"description\" : \"description\",    \"inLanguage\" : \"English\",    \"version\" : \"version\",    \"url\" : \"url\",    \"datePublished\" : \"2017-07-21T17:32:28Z\",    \"license\" : \"license\",    \"dateCreated\" : \"2017-07-21T17:32:28Z\",    \"name\" : \"name\",    \"id\" : 5,    \"learningResourceType\" : \"PDF\",    \"thumbnailUrl\" : \"thumbnailUrl\"  },  \"dateModifiedInternal\" : \"2017-07-21T17:32:28Z\",  \"id\" : 0,  \"source\" : \"source\",  \"authors\" : [ {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  }, {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  } ]}", MetadataDto.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MetadataControllerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete metadata by ID", nickname = "delete", notes = "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors", response = MetadataDto.class, tags={ "metadata-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MetadataDto.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/metadata",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    default ResponseEntity<MetadataDto> _delete(@ApiParam(value = "ID of the metadata that needs to be deleted",required=true) @PathVariable("Id") Long id) {
        return delete(id);
    }

    // Override this method
    default ResponseEntity<MetadataDto> delete(Long id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"institution\" : {    \"ror\" : \"ror\",    \"name\" : \"name\",    \"id\" : 5  },  \"didactics\" : {    \"educationalUse\" : \"educationalUse\",    \"timeRequired\" : \"timeRequired\",    \"interactivityType\" : \"interactivityType\",    \"audience\" : \"audience\",    \"id\" : 1  },  \"educationalResource\" : {    \"identifier\" : \"identifier\",    \"keywords\" : [ \"Math\", \"Sience\", \"Lesson\" ],    \"dateLastUpdated\" : \"2017-07-21T17:32:28Z\",    \"subject\" : \"subject\",    \"description\" : \"description\",    \"inLanguage\" : \"English\",    \"version\" : \"version\",    \"url\" : \"url\",    \"datePublished\" : \"2017-07-21T17:32:28Z\",    \"license\" : \"license\",    \"dateCreated\" : \"2017-07-21T17:32:28Z\",    \"name\" : \"name\",    \"id\" : 5,    \"learningResourceType\" : \"PDF\",    \"thumbnailUrl\" : \"thumbnailUrl\"  },  \"dateModifiedInternal\" : \"2017-07-21T17:32:28Z\",  \"id\" : 0,  \"source\" : \"source\",  \"authors\" : [ {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  }, {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  } ]}", MetadataDto.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MetadataControllerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find Metadata by Id", nickname = "findById", notes = "With this end-point we can  get by Id  an existing  Metadata", response = MetadataDto.class, tags={ "metadata-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MetadataDto.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/metadata/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<MetadataDto> _findById(@ApiParam(value = "id",required=true) @PathVariable("id") Long id) {
        return findById(id);
    }

    // Override this method
    default ResponseEntity<MetadataDto> findById(Long id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"institution\" : {    \"ror\" : \"ror\",    \"name\" : \"name\",    \"id\" : 5  },  \"didactics\" : {    \"educationalUse\" : \"educationalUse\",    \"timeRequired\" : \"timeRequired\",    \"interactivityType\" : \"interactivityType\",    \"audience\" : \"audience\",    \"id\" : 1  },  \"educationalResource\" : {    \"identifier\" : \"identifier\",    \"keywords\" : [ \"Math\", \"Sience\", \"Lesson\" ],    \"dateLastUpdated\" : \"2017-07-21T17:32:28Z\",    \"subject\" : \"subject\",    \"description\" : \"description\",    \"inLanguage\" : \"English\",    \"version\" : \"version\",    \"url\" : \"url\",    \"datePublished\" : \"2017-07-21T17:32:28Z\",    \"license\" : \"license\",    \"dateCreated\" : \"2017-07-21T17:32:28Z\",    \"name\" : \"name\",    \"id\" : 5,    \"learningResourceType\" : \"PDF\",    \"thumbnailUrl\" : \"thumbnailUrl\"  },  \"dateModifiedInternal\" : \"2017-07-21T17:32:28Z\",  \"id\" : 0,  \"source\" : \"source\",  \"authors\" : [ {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  }, {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  } ]}", MetadataDto.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MetadataControllerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Update an existing Metadata", nickname = "update", notes = "With this end-point we can  update an existing  Metadata ", response = MetadataDto.class, tags={ "metadata-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MetadataDto.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/metadata",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<MetadataDto> _update(@ApiParam(value = "Id to update Metadata",required=true) @PathVariable("Id") Long id,@ApiParam(value = "Metadata Object needs to be added " ,required=true )  @Valid @RequestBody MetadataDto body) {
        return update(id, body);
    }

    // Override this method
    default ResponseEntity<MetadataDto> update(Long id,MetadataDto body) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"institution\" : {    \"ror\" : \"ror\",    \"name\" : \"name\",    \"id\" : 5  },  \"didactics\" : {    \"educationalUse\" : \"educationalUse\",    \"timeRequired\" : \"timeRequired\",    \"interactivityType\" : \"interactivityType\",    \"audience\" : \"audience\",    \"id\" : 1  },  \"educationalResource\" : {    \"identifier\" : \"identifier\",    \"keywords\" : [ \"Math\", \"Sience\", \"Lesson\" ],    \"dateLastUpdated\" : \"2017-07-21T17:32:28Z\",    \"subject\" : \"subject\",    \"description\" : \"description\",    \"inLanguage\" : \"English\",    \"version\" : \"version\",    \"url\" : \"url\",    \"datePublished\" : \"2017-07-21T17:32:28Z\",    \"license\" : \"license\",    \"dateCreated\" : \"2017-07-21T17:32:28Z\",    \"name\" : \"name\",    \"id\" : 5,    \"learningResourceType\" : \"PDF\",    \"thumbnailUrl\" : \"thumbnailUrl\"  },  \"dateModifiedInternal\" : \"2017-07-21T17:32:28Z\",  \"id\" : 0,  \"source\" : \"source\",  \"authors\" : [ {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  }, {    \"givenName\" : \"givenName\",    \"familyName\" : \"familyName\",    \"orcid\" : \"orcid\",    \"id\" : 6,    \"gnd\" : \"gnd\"  } ]}", MetadataDto.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default MetadataControllerApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
