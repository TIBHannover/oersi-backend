<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.oersi</groupId>
	<artifactId>oersi-backend</artifactId>
	<version>0.8.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>oersi-backend</name>
	<description>API / Backend for the OER Search Index</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.12.4</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-batik</artifactId>
			<version>3.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-transcoder</artifactId>
			<version>1.14</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--Add swagger Dependency -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.9</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>4.4.1</version>
				<configuration>
					<!-- NOTE: h2 does not work here! -->
					<!-- you can setup local mariadb via docker: docker run -e MYSQL_DATABASE=test -e MYSQL_USER=test -e MYSQL_PASSWORD=test -e MYSQL_ROOT_PASSWORD=xxx -p 3306:3306 -d mariadb:10.1 -->
					<!-- Generate changelog from domain objects via 'mvn clean compile' + 'mvn liquibase:diff' -->
					<changeLogFile>src/main/resources/db/changelog/db.changelog-master.yaml</changeLogFile>
					<driver>org.mariadb.jdbc.Driver</driver>
					<url>jdbc:mariadb://localhost:3306/test</url>
					<username>test</username>
					<password>test</password>
					<referenceUrl>hibernate:spring:org.oersi.domain?dialect=org.hibernate.dialect.MySQL5InnoDBDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
					<diffChangeLogFile>target/liquibase-diff-changeLog.yml</diffChangeLogFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.liquibase.ext</groupId>
						<artifactId>liquibase-hibernate5</artifactId>
						<version>4.3.5</version>
					</dependency>

					<dependency>
						<groupId>org.javassist</groupId>
						<artifactId>javassist</artifactId>
						<version>3.23.1-GA</version>
					</dependency>
					<dependency>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-data-jpa</artifactId>
						<version>2.1.2.RELEASE</version>
					</dependency>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.1</version>
					</dependency>
					<dependency>
						<groupId>javax.validation</groupId>
						<artifactId>validation-api</artifactId>
						<version>2.0.1.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/swagger</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>3.0.27</version>
				<executions>
					<execution>
						<id>generate-Api-V3</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/model/api.yaml</inputSpec>
							<language>spring</language>
							<generateSupportingFiles>false</generateSupportingFiles>
							<invokerPackage>entities</invokerPackage>
							<apiPackage>org.oersi.api</apiPackage>
							<modelPackage>org.oersi.dto</modelPackage>
							<modelNameSuffix>Dto</modelNameSuffix>
							<withXml>true</withXml>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<java8>true</java8>
								<interfaceOnly>true</interfaceOnly>
								<delegatePattern>true</delegatePattern>
								<useTags>true</useTags>
								<springBootVersion>${project.parent.version}</springBootVersion>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- workaround to fix code generation of swagger-codegen-maven-plugin -->
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<basedir>${project.basedir}/target/generated-sources/swagger/org/oersi</basedir>
					<includes>
						<include>dto/MetadataDto.java</include>
						<include>dto/LocalizedStringDto.java</include>
						<include>dto/OembedResponseDto.java</include>
						<include>api/SearchControllerApi.java</include>
					</includes>
					<replacements>
						<replacement>
							<!-- cannot handle propertyname with "@" inside -> fix in generated file -->
							<token>public List.Object. getAtContext</token>
							<value>@JsonProperty("@context") public List&lt;Object&gt; getAtContext</value>
						</replacement>
						<replacement>
							<!-- added missing localizedString example -->
							<token>description = "A language-tagged string using JSON-LD</token>
							<value>example = "{\\"de\\":\\"Mathematik\\", \\"en\\":\\"Mathematics\\"}", description = "A language-tagged string using JSON-LD</value>
						</replacement>
						<replacement>
							<!-- workaround for wrapping object-array 'authors' -->
							<token>private List.OembedResponseAuthorsDto. authors = null;</token>
							<value>@XmlElementWrapper(name = "authors") private List&lt;OembedResponseAuthorsDto&gt; authors = null;</value>
						</replacement>
						<replacement>
							<!-- workaround for request body not marked as optional (https://github.com/swagger-api/swagger-codegen/issues/10463) -->
							<token>description = "body of elasticsearch POST-request", schema=@Schema... @Valid @RequestBody</token>
							<value>description = "body of elasticsearch POST-request", schema=@Schema()) @Valid @RequestBody(required = false)</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger</groupId>
										<artifactId>swagger-codegen-maven-plugin</artifactId>
										<versionRange>[2.4.12,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<repositories>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/${env.CI_PROJECT_ID}/packages/maven</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/${env.CI_PROJECT_ID}/packages/maven</url>
		</repository>
		<snapshotRepository>
			<id>gitlab-maven</id>
			<url>https://gitlab.com/api/v4/projects/${env.CI_PROJECT_ID}/packages/maven</url>
		</snapshotRepository>
	</distributionManagement>
</project>
